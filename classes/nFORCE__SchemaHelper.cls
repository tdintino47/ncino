/*
This file is generated and isn't the actual source code for this
managed global class.
This read-only file shows the class's global constructors,
methods, variables, and properties.
To enable code to compile, all methods return null.
*/
global class SchemaHelper {
    global SchemaHelper() {

    }
    global static Map<String,Schema.SObjectType> getAllLookups(Schema.SObjectType objectType, Integer depth) {
        return null;
    }
    global static Map<String,Schema.DescribeFieldResult> getCaselessCacheSObjectFieldMap(Schema.SObjectType objType) {
        return null;
    }
    global static Map<String,Schema.DescribeFieldResult> getCaselessRelationshipFieldMapFromObject(Schema.SObjectType objType) {
        return null;
    }
    global static Schema.DescribeFieldResult getDescribe(Schema.SObjectField field) {
        return null;
    }
    global static Schema.DescribeFieldResult getDescribe(Schema.SObjectType objectType, String fieldReference) {
        return null;
    }
    global static Schema.DescribeFieldResult getDescribeFieldResult(Schema.SObjectType objType, String fieldName) {
        return null;
    }
    global static Schema.DescribeFieldResult getDescribeReferenceField(Schema.SObjectType objectType, String fieldReference) {
        return null;
    }
    global static Schema.SObjectField getField(Schema.SObjectType objectType, String fieldReference) {
        return null;
    }
    global static List<Schema.SObjectField> getFieldList(Schema.SObjectType objectType) {
        return null;
    }
    global static String getName(Schema.SObjectField field) {
        return null;
    }
    global static List<Schema.ChildRelationship> getRelationships(Schema.SObjectType parentType, Schema.SObjectType childType) {
        return null;
    }
    global static Schema.SObjectType getType(String typeName) {
        return null;
    }
    global static Boolean isFilterable(Schema.SObjectType objType, String fieldName) {
        return null;
    }
    global static Boolean isSortable(Schema.SObjectType objType, String fieldName) {
        return null;
    }
}
