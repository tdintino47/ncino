!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module.default}:function getModuleExports(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=124)}({0:function(module,exports,__webpack_require__){"use strict";var isOldIE=function isOldIE(){var memo;return function memorize(){return void 0===memo&&(memo=Boolean(window&&document&&document.all&&!window.atob)),memo}}(),getTarget=function getTarget(){var memo={};return function memorize(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}}(),stylesInDom=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDom.length;i++)if(stylesInDom[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var index=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3]};-1!==index?(stylesInDom[index].references++,stylesInDom[index].updater(obj)):stylesInDom.push({identifier:identifier,updater:function addStyle(obj,options){var style,update,remove;{var styleIndex;remove=options.singleton?(styleIndex=singletonCounter++,style=singleton=singleton||insertStyleElement(options),update=applyToSingletonTag.bind(null,style,styleIndex,!1),applyToSingletonTag.bind(null,style,styleIndex,!0)):(style=insertStyleElement(options),update=function applyToTag(style,options,obj){var css=obj.css,media=obj.media,sourceMap=obj.sourceMap;media?style.setAttribute("media",media):style.removeAttribute("media");sourceMap&&btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */"));if(style.styleSheet)style.styleSheet.cssText=css;else{for(;style.firstChild;)style.removeChild(style.firstChild);style.appendChild(document.createTextNode(css))}}.bind(null,style,options),function remove(){!function removeStyleElement(style){if(null===style.parentNode)return;style.parentNode.removeChild(style)}(style)})}return update(obj),function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap)return;update(obj=newObj)}else remove()}}(obj,options),references:1}),identifiers.push(identifier)}return identifiers}function insertStyleElement(options){var nonce,style=document.createElement("style"),attributes=options.attributes||{};if(void 0!==attributes.nonce||(nonce=__webpack_require__.nc)&&(attributes.nonce=nonce),Object.keys(attributes).forEach(function(key){style.setAttribute(key,attributes[key])}),"function"==typeof options.insert)options.insert(style);else{var target=getTarget(options.insert||"head");if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}return style}var replaceText=function replaceText(){var textStore=[];return function replace(index,replacement){return textStore[index]=replacement,textStore.filter(Boolean).join("\n")}}();function applyToSingletonTag(style,index,remove,obj){var cssNode,childNodes,css=remove?"":obj.media?"@media ".concat(obj.media," {").concat(obj.css,"}"):obj.css;style.styleSheet?style.styleSheet.cssText=replaceText(index,css):(cssNode=document.createTextNode(css),(childNodes=style.childNodes)[index]&&style.removeChild(childNodes[index]),childNodes.length?style.insertBefore(cssNode,childNodes[index]):style.appendChild(cssNode))}var singleton=null,singletonCounter=0;module.exports=function(list,options){(options=options||{}).singleton||"boolean"==typeof options.singleton||(options.singleton=isOldIE());var lastIdentifiers=modulesToDom(list=list||[],options);return function update(newList){if(newList=newList||[],"[object Array]"===Object.prototype.toString.call(newList)){for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDom[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDom[_index].references&&(stylesInDom[_index].updater(),stylesInDom.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}}},1:function(module,exports){module.exports=function(useSourceMap){var list=[];return list.toString=function toString(){return this.map(function(item){var content=function cssWithMappingToString(item,useSourceMap){var content=item[1]||"",cssMapping=item[3];if(!cssMapping)return content;if(useSourceMap&&"function"==typeof btoa){var sourceMapping=function toComment(sourceMap){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))+" */"}(cssMapping),sourceURLs=cssMapping.sources.map(function(source){return"/*# sourceURL="+cssMapping.sourceRoot+source+" */"});return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}return[content].join("\n")}(item,useSourceMap);return item[2]?"@media "+item[2]+"{"+content+"}":content}).join("")},list.i=function(modules,mediaQuery){"string"==typeof modules&&(modules=[[null,modules,""]]);for(var alreadyImportedModules={},i=0;i<this.length;i++){var id=this[i][0];"number"==typeof id&&(alreadyImportedModules[id]=!0)}for(i=0;i<modules.length;i++){var item=modules[i];"number"==typeof item[0]&&alreadyImportedModules[item[0]]||(mediaQuery&&!item[2]?item[2]=mediaQuery:mediaQuery&&(item[2]="("+item[2]+") and ("+mediaQuery+")"),list.push(item))}},list}},124:function(module,exports,__webpack_require__){module.exports=__webpack_require__(125)},125:function(module,exports,__webpack_require__){__webpack_require__(126),__webpack_require__(128)},126:function(module,exports,__webpack_require__){var api=__webpack_require__(0),content=__webpack_require__(127);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},127:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(1)(!1)).push([module.i,'\n.slds .ncTreeGridContainer {\n\tpadding: 10px;\n\twidth: 100%;\n}\n\n.slds .ncTreeGridContainer table.treeGrid {\n\twidth: 100%;\n}\n\n.slds .ncTreeGridContainer table.treeGrid td.noRecords {\n\ttext-align: center;\n}\n\n.slds .ncTreeGridContainer div.performActions {\n\tfloat: right;\n\tpadding: 5px;\n}\n\n.slds .ncTreeGridContainer table tbody tr td a {\n\toutline: none;\n\tcursor: pointer;\n}\n\n.slds .ncTreeGridContainer table tbody tr td a.disabled {\n\tcolor: gray;\n\tcursor: default;\n\ttext-decoration: none;\n}\n\n.slds .ncTreeGridContainer button:disabled {\n\tbackground: #dddddd;\n}\n\n.slds .popover-icon-warning svg {\n\theight: 15px;\n\twidth: 15px;\n}\n\n.slds .popover-icon-warning path {\n\tfill: #ffb75d;\n}\n\n.slds .ncTreeGridContainer .popover {\n\tbackground: #FFB75D;\n\tcolor: #061C3F;\n\tborder: #FFB75D;\n\tposition: fixed;\n\tz-index: 9999;\n}\n\n.slds .ncTreeGridContainer table tbody tr td span.disabled-row {\n\tcolor: #D3D3D3;\n\ttext-decoration: line-through;\n}\n\n.slds input[type="checkbox"] {\n\tmargin-right: 5px;\n}\n\n.slds .popover.top > .arrow:after,\n.slds .popover.right > .arrow:after,\n.slds .popover.bottom > .arrow:after,\n.slds .popover.left > .arrow:after {\n\tborder-top-color: #FFB75D;\n}',""])},128:function(module,exports,__webpack_require__){!function(angular){"use strict";function TreeGridDirective(messageService,modalDialogService,remotingManager,pubsub,ui,config){return Visualforce.remoting.timeout=12e4,{restrict:"E",template:__webpack_require__(129),link:function(scope,element,attributes){scope.$watch(function(){return scope.vm.filters},function(newValue,oldValue){var newFilters;!newValue||newValue==oldValue||"object"==typeof(newFilters=scope.$eval(newValue))&&null!=scope.vm.unFilteredTree&&(scope.vm.filters=newFilters,scope.vm.refreshTreeGrid())},!0),scope.$watch(function(){return scope.vm.getTreeDataRa},function(newValue,oldValue){newValue&&newValue!=oldValue&&scope.vm.refreshTreeGrid()},!0),pubsub.subscribe("treeGrid.assignToContextParams"+scope.vm.guid,function(keyValue){void 0===scope.vm.contextParams?scope.vm.contextParams={}:"string"==typeof scope.vm.contextParams&&(scope.vm.contextParams=angular.fromJson(scope.vm.contextParams)),scope.vm.contextParams[keyValue.key]=keyValue.value,scope.vm.contextParams=angular.toJson(scope.vm.contextParams)})},controller:function TreeGridController($scope){var vm=this;function getTreeGrid(){vm.hasTreeLoaded=!1,disableAllButtons(),vm.remotingService&&vm.getTreeDataRa?(ui.block(),remotingManager.invokeAction(vm.remotingService,vm.getTreeDataRa,{contextId:vm.contextId,contextParams:vm.contextParams||{}},receiveTreeGrid,{escape:!1,buffer:!1})):vm.getTreeDataRa?(ui.block(),remotingManager.invokeAction(vm.getTreeDataRa,vm.contextId,receiveTreeGrid,{escape:!1,buffer:!1})):vm.getTreeDataRaContext&&(ui.block(),remotingManager.invokeAction(vm.getTreeDataRaContext,vm.contextId,vm.contextParams,receiveTreeGrid,{escape:!1,buffer:!1}))}function adjustOptions(option){var tmpOptions;return vm.splitParameterOption?(tmpOptions=angular.toJson(option),angular.toJson(tmpOptions.match(/(.|[\r\n]){1,750000}/g))):angular.toJson(option)}function processTreeGrid(result){vm.unFilteredTree=JSON.parse(result),vm.treeGrid=JSON.parse(result),null!=vm.filters&&(vm.treeGrid.rows=vm.filterTreeGrid()),null!=vm.treeGrid.globalOptions&&null!=vm.treeGrid.globalOptions.options&&0<vm.treeGrid.globalOptions.options.length&&(vm.hasGlobalActionDropdown=!0),messageService.clear()}function receiveTreeGrid(result,event){ui.unblock(),event.status?processTreeGrid(result):(vm.treeGrid=null,messageService.setMessage({type:messageService.messageTypes.error,canDismiss:!1,text:event.message},!0)),vm.hasTreeLoaded=!0,pubsub.publish("treeGrid.receiveTreeGrid"+vm.treeGridGuid,vm),onTreeGridChanged()}function receiveActionResponse(result,event){var resultMap;event.status?(resultMap=JSON.parse(result)).hasOwnProperty("url")?(messageService.clear(),-1!==resultMap.url.indexOf("?")&&LifeCycle.Navigator.navigateToRoute(resultMap.url),window.location.href=resultMap.url):resultMap.hasOwnProperty("action")&&"edit"===resultMap.action?(messageService.clear(),LifeCycle.Navigator.navigateToSObjectEdit(resultMap.contextId),ui.unblock()):resultMap.hasOwnProperty("parentUrl")?(messageService.clear(),window.top.location.href=resultMap.parentUrl):resultMap.hasOwnProperty("modal")?(ui.unblock(),modalDialogService.setDialog(resultMap.modal),null!=resultMap.modal.object&&(vm.modalObject=resultMap.modal.object),null!=resultMap.continueButton?modalDialogService.setContinueButton({label:resultMap.continueButton.label,style:resultMap.continueButton.style,visible:!0,behavior:function(){vm.isModalVisible=!1}}):modalDialogService.setContinueButton(null),null!=resultMap.saveButton?modalDialogService.setSaveButton({label:resultMap.saveButton.label,style:resultMap.saveButton.style,visible:!0,behavior:function(){vm.performAlertSaveAction(angular.toJson(vm.modalObject)),vm.isModalVisible=!1}}):modalDialogService.setSaveButton(null),null!=resultMap.cancelButton?modalDialogService.setCancelButton({label:resultMap.cancelButton.label,style:resultMap.cancelButton.style,visible:!0,behavior:function(){vm.isModalVisible=!1}}):modalDialogService.setCancelButton(null),vm.isModalVisible=!0):resultMap.hasOwnProperty("treeGridData")?receiveTreeGrid(resultMap.treeGridData,event):(ui.unblock(),messageService.setMessage(resultMap,!0)):(ui.unblock(),messageService.setMessage({type:messageService.messageTypes.error,canDismiss:!1,text:event.message},!0)),pubsub.publish("treeGrid.receiveActionResponse"+vm.treeGridGuid,vm)}function findObjectIndex(collection,object,mostLikelyIndex){var objectIndex=null;if(collection&&(mostLikelyIndex&&collection[mostLikelyIndex]===object&&(objectIndex=mostLikelyIndex),null==objectIndex))for(var i=0;i<collection.length;i++)if(collection[i]===object){objectIndex=i;break}return objectIndex}function onTreeGridChanged(){if(vm.flattenedTreeGrid=new Array,vm.treeGrid&&vm.treeGrid.rows)for(var i=0;i<vm.treeGrid.rows.length;i++)!function flattenChildren(row){vm.flattenedTreeGrid.push(row);if(row.expanded&&vm.isExpandable(row))for(var i=0;i<row.children.length;i++)flattenChildren(row.children[i]);else collapseChildren(row)}(vm.treeGrid.rows[i]);function collapseChildren(row){if(null!=row.children)for(var i=0;i<row.children.length;i++)row.children[i].expanded=!1,collapseChildren(row.children[i])}updatePerformActionsButtonState(),function updateGlobalActionsDropDownState(){vm.isGlobalActionDropdownEnabled=!1,null==vm.treeGrid||vm.treeGrid.columns&&vm.treeGrid.columns.forEach(function(column){var showSelector=vm.getUserDataValue(column.userData,"columnType");vm.isGlobalActionDropdownEnabled=vm.isGlobalActionDropdownEnabled||"CheckBoxColumn"==showSelector})}()}function disableAllButtons(){if(vm.isDropDownActionsButtonEnabled=!1,vm.isGlobalActionDropdownEnabled=!1,null!=vm.treeGrid)for(var i=0;i<vm.treeGrid.rows.length;i++)!function disableChildren(row){if(null!=row.cells)for(var i=0;i<row.cells.length;i++)if(null!=row.cells[i].options)for(var j=0;j<row.cells[i].options.length;j++)row.cells[i].options[j].enabled=!1;if(null!=row.children)for(var i=0;i<row.children.length;i++)disableChildren(row.children[i])}(vm.treeGrid.rows[i])}function updatePerformActionsButtonState(){!(vm.hasDropDownActionsButton=!1)!==vm.isPerformActionsBtnEnabled&&void 0!==vm.isPerformActionsBtnEnabled||(vm.isDropDownActionsButtonEnabled=!0),null!=vm.flattenedTreeGrid&&vm.flattenedTreeGrid.forEach(function(row){row.cells.forEach(function(cell){var isCellDropDown=vm.isCellDropDown(cell)||vm.isCellDropDownGroup(cell);vm.hasDropDownActionsButton=vm.hasDropDownActionsButton||isCellDropDown})})}vm.config=config.get(),vm.treeGrid=null,vm.flattenedTreeGrid=null,vm.hasTreeLoaded=!1,vm.hasDropDownActionsButton=!1,vm.hasGlobalActionDropdown=!1,vm.isGlobalActionDropdownEnabled=!1,vm.onTreeGridChanged=onTreeGridChanged,vm.isModalVisible=!1,vm.modalObject=null,vm.filters=null,vm.columnIndexMap=null,vm.refreshTreeGrid=function(){getTreeGrid()},vm.$onInit=function(){vm.secondaryButton||(vm.secondaryButton={action:function(){},class:"",enabled:!0,label:"cancelLabel",show:!1}),vm.actionButtonClass=vm.actionButtonClass?vm.actionButtonClass:"",vm.selectionColumnParams=vm.selectionColumnParams?vm.selectionColumnParams:null,vm.isDropDownActionsButtonEnabled=void 0===vm.isPerformActionsBtnEnabled||vm.isPerformActionsBtnEnabled,vm.splitParameterOption=vm.splitParameterOption?vm.splitParameterOption:null,vm.secondaryButton.action=void 0!==vm.secondaryButton.action?vm.secondaryButton.action:function(){},vm.secondaryButton.class=vm.secondaryButton.class?vm.secondaryButton.class:"",vm.secondaryButton.enabled=!(!1===vm.secondaryButton.enabled),vm.secondaryButton.label=vm.secondaryButton.label?vm.secondaryButton.label:"cancelLabel",vm.secondaryButton.show=!!vm.secondaryButton.show,vm.selectionBoxesDisplay=!(!1===vm.selectionBoxesDisplay),vm.treeGridGuid=vm.guid?"-"+vm.guid:"",function setAlertLabels(){if(null==vm.alertLabels)return;$scope.alert.label={heading:vm.alertLabels.heading,message:vm.alertLabels.message,cancel:vm.alertLabels.cancel,confirm:vm.alertLabels.confirm,save:vm.alertLabels.save}}(),vm.treeData?function processTreeGridBinding(){vm.hasTreeLoaded=!1,disableAllButtons(),processTreeGrid(vm.treeData),vm.hasTreeLoaded=!0,pubsub.publish("treeGrid.receiveTreeGrid"+vm.treeGridGuid,vm),onTreeGridChanged()}():void 0===vm.treeData&&(onTreeGridChanged(),getTreeGrid())},vm.getCellByName=function(row,name){if(null==vm.columnIndexMap){vm.columnIndexMap={};for(var m=0;m<row.cells.length;m++)null!=row.cells[m].cellName&&(vm.columnIndexMap[row.cells[m].cellName]=m)}return row.cells[vm.columnIndexMap[name]]},vm.performAlertConfirmAction=function(row,cell,option){function performRa(){ui.block(),vm.hasTreeLoaded=!1,disableAllButtons(),null!=vm.alertConfirmRa&&remotingManager.invokeAction(vm.alertConfirmRa,vm.contextId,row.id,null,receiveTreeGrid,{escape:!1,buffer:!1}),ui.unblock()}vm.performActionsButtonHasAlert?(vm.alert_ra.resetLabels(),vm.alert_ra.isRendered=!0,vm.alert_ra.callbacks.confirm=performRa):performRa()},vm.performAlertSaveAction=function(saveObject){function performRa(){ui.block(),vm.hasTreeLoaded=!1,disableAllButtons(),vm.remotingService&&vm.alertSaveRa?remotingManager.invokeAction(vm.remotingService,vm.alertSaveRa,{editObject:saveObject},receiveTreeGrid,{escape:!1}):null!=vm.alertSaveRa&&remotingManager.invokeAction(vm.alertSaveRa,saveObject,null,receiveTreeGrid,{escape:!1,buffer:!1}),ui.unblock()}vm.performActionsButtonHasAlert?(vm.alert_ra.resetLabels(),vm.alert_ra.isRendered=!0,vm.alert_ra.callbacks.confirm=performRa):performRa()},vm.performAction=function(row,cell,option){function performRa(){var sendOptions=adjustOptions(option);option.enabled&&(vm.remotingService&&vm.performTreeActionRa?(ui.block(),remotingManager.invokeAction(vm.remotingService,vm.performTreeActionRa,{contextId:vm.contextId,rowId:row.id,contextParams:vm.contextParams,option:sendOptions},receiveActionResponse,{escape:!1,buffer:!1})):vm.performTreeActionRa?(ui.block(),remotingManager.invokeAction(vm.performTreeActionRa,vm.contextId,row.id,sendOptions,receiveActionResponse,{escape:!1,buffer:!1})):vm.performTreeActionRaContext&&(ui.block(),remotingManager.invokeAction(vm.performTreeActionRaContext,vm.contextId,vm.contextParams,row.id,sendOptions,receiveActionResponse,{escape:!1,buffer:!1})))}vm.performActionsButtonHasAlert?(vm.alert_ra.resetLabels(),vm.alert_ra.isRendered=!0,vm.alert_ra.callbacks.confirm=performRa):performRa(),pubsub.publish("treeGrid.performAction"+vm.treeGridGuid,{vm:vm,row:row,option:angular.toJson(option)})},vm.performDropDownActions=function(){function performRa(){var sendTreeGrid=adjustOptions(vm.treeGrid);vm.isDropDownActionsButtonEnabled&&(vm.remotingService&&vm.performTreeActionRa?(ui.block(),remotingManager.invokeAction(vm.remotingService,vm.performTreeActionRa,{contextId:vm.contextId,rowId:null,contextParams:vm.contextParams,option:sendTreeGrid},receiveActionResponse,{escape:!1,buffer:!1})):vm.performTreeActionRa?(ui.block(),remotingManager.invokeAction(vm.performTreeActionRa,vm.contextId,null,sendTreeGrid,receiveActionResponse,{escape:!1,buffer:!1})):vm.performTreeActionRaContext&&(ui.block(),remotingManager.invokeAction(vm.performTreeActionRaContext,vm.contextId,vm.contextParams,null,sendTreeGrid,receiveActionResponse,{escape:!1,buffer:!1})))}vm.performActionsButtonHasAlert?(vm.alert_ra.resetLabels(),vm.alert_ra.isRendered=!0,vm.alert_ra.callbacks.confirm=performRa):performRa()},vm.performGlobalDropDownActions=function(option){function performRa(){var sendOptions=adjustOptions(option),sendTreeGrid=adjustOptions(vm.treeGrid);vm.hasTreeLoaded=!1,disableAllButtons(),remotingManager.invokeAction(vm.globalActions,vm.contextId,sendOptions,null,sendTreeGrid,receiveTreeGrid,{escape:!1,buffer:!1}),pubsub.publish("treeGrid.GlobalDropDownActions"+vm.treeGridGuid,{vm:vm,option:angular.toJson(option)})}null!=vm.globalActions&&null!=option&&1==option.enabled&&(null!=vm.globalActionLabels?(vm.alert_ra._setModalLabels(vm.alert_ra.label,vm.globalActionLabels),vm.alert_ra.isRendered=!0,vm.alert_ra.callbacks.confirm=performRa):performRa())},vm.getUserDataValue=function(userData,key){try{return JSON.parse(userData)[key]}catch(err){return null}},vm.filterTreeGrid=function filterTreeGrid(){var unfilteredRows=vm.unFilteredTree.rows;if(void 0===vm.filters)return unfilteredRows;"string"==typeof vm.filters&&(vm.filters=$scope.$eval(vm.filters));var filters=vm.filters.filters,filterCount=filters.length,finalDeduped={},filterMaps={};if(0==filterCount)return unfilteredRows;for(var i=0;i<filterCount;i++)filters[i].cellIndex=function findCellIndex(fil){var cellIndex=-1;return vm.unFilteredTree.columns.forEach(function(f,i){f.label.toLowerCase()==fil.column.toLowerCase()&&(cellIndex=i)}),cellIndex}(filters[i]);for(i=0;i<filterCount;i++){for(var applyFilter=filters[i],filterLevelMap={},j=0;j<applyFilter.values.length;j++)for(var k=0;k<unfilteredRows.length;k++){var cellValue="";unfilteredRows[k]&&unfilteredRows[k].cells[applyFilter.cellIndex]&&unfilteredRows[k].cells[applyFilter.cellIndex].value&&null!=unfilteredRows[k].cells[applyFilter.cellIndex].value.label&&(cellValue=unfilteredRows[k].cells[applyFilter.cellIndex].value.label.toLowerCase()),cellValue==applyFilter.values[j].toLowerCase()&&(filterLevelMap[unfilteredRows[k].id]=unfilteredRows[k])}filterMaps[applyFilter.column]=filterLevelMap}var filteredColumns=Object.keys(filterMaps);if(1<filteredColumns.length)for(var baseMap=filterMaps[filteredColumns[0]],baseKeys=Object.keys(baseMap),i=0;i<baseKeys.length;i++){for(var isInAll=!1,key=baseKeys[i],j=0;j<filteredColumns.length;j++){if(null==filterMaps[filteredColumns[j]][key]){isInAll=!1;break}isInAll=!0}isInAll&&(finalDeduped[key]=baseMap[key])}else finalDeduped=filterMaps[filteredColumns[0]];return Object.keys(finalDeduped).map(function(key){return finalDeduped[key]})},vm.onDropdownChanged=function(row,cell){for(var cellValueLabel,cellIndex=null,i=0;i<row.cells.length;i++)if(row.cells[i]==cell){cellIndex=i;break}null!==cellIndex&&("true"==vm.propagateDropDownChange&&(cellValueLabel=null==cell.value?null:cell.value.label,function propagateChange(row,cellIndex){var options=row.cells[cellIndex].options;if(null!=options)for(var i=0;i<options.length;i++)if(options[i].label==cellValueLabel){row.cells[cellIndex].value=options[i];break}if(null!=row.children)for(var i=0;i<row.children.length;i++)propagateChange(row.children[i],cellIndex)}(row,cellIndex)),pubsub.publish("treeGrid.onDropdownChanged"+vm.treeGridGuid,{vm:vm,row:row,cellIndex:cellIndex}),updatePerformActionsButtonState())},vm.getRecordIdFromUserData=function(userData){return JSON.parse(userData).recordId},vm.toggleExpand=function(row){row.expanded=!row.expanded,onTreeGridChanged()},vm.isExpandable=function(row){return null!=row&&null!=row.children&&0<row.children.length&&row.depth<vm.maxDepth},vm.isRowDisabled=function(row){return row.isDisabled},vm.getCellLabel=function(cell){return null==cell.type?cell.value.label:null},vm.isCellButton=function(cell){return"Button"==cell.type},vm.getCellButtonClass=function(cell,option){return option.enabled?"":"disabled"},vm.isCellDropDown=function(cell){return"DropDown"==cell.type},vm.isCellDropDownGroup=function(cell){return"DropDownGroup"==cell.type},vm.isCellList=function(cell){return"List"==cell.type},vm.isCellListAction=function(cell){return"ListAction"==cell.type},vm.isCellBadge=function(cell){return"Badge"==cell.type},vm.isCheckBoxCell=function(cell){return"CheckBox"===cell.type},vm.isStandardCheckBoxCell=function(cell){return"StandardCheckBox"===cell.type},vm.isCellTooltip=function(cell){return"Tooltip"==cell.type},vm.excludeCellFromDisabledStyle=function(cell){return cell.excludeFromDisabledStyle},vm.isNameField=function(cell){return"NameField"===cell.type},vm.isCurrencyField=function(cell){return"Currency"===cell.type},vm.onCheckBoxChanged=function(row,cell){var cellIndex=vm.getUserDataValue(cell.userData,"columnIndex");null==cellIndex&&(cellIndex=findObjectIndex(row.cells,cell,null)),null!=cellIndex&&("true"==function shouldPropagate(cellIndex){var propagateOverrideLevel,returnValue="true",column=vm.treeGrid.columns[cellIndex],propagateColumnLevel=vm.getUserDataValue(column.userData,"propagateToChildren"),parameterKey=vm.getUserDataValue(column.userData,"columnName");parameterKey&&vm.selectionColumnParams&&vm.selectionColumnParams[parameterKey]&&(propagateOverrideLevel=vm.selectionColumnParams[parameterKey].propagate);propagateOverrideLevel?returnValue=propagateOverrideLevel:propagateColumnLevel&&(returnValue=propagateColumnLevel);return returnValue}(cellIndex)&&function propagateChange(row,cellIndex,cellValue){row.cells[cellIndex].selected=cellValue;pubsub.publish("treeGrid.onCheckBoxChanged"+vm.treeGridGuid,{vm:vm,row:row});if(null!=row.children)for(var i=0;i<row.children.length;i++)propagateChange(row.children[i],cellIndex,cellValue)}(row,cellIndex,cell.selected),function toggleCheckAll(cellIndex){var checkValue=!0;if(null!=vm.treeGrid){for(var i=0;i<vm.treeGrid.rows.length;i++){if(1!=vm.treeGrid.rows[i].cells[cellIndex].selected){checkValue=!1;break}if(!function toggleCheckChildren(row,cellIndex){if(1==row.cells[cellIndex].selected){if(row.children)for(var i=0;i<row.children.length&&(toggleCheckChildren(row.children[i],cellIndex),0!=checkValue);i++);}else checkValue=!1}(vm.treeGrid.rows[i],cellIndex),0==checkValue)break}vm.treeGrid.columns[cellIndex].selected=checkValue}}(cellIndex),onTreeGridChanged())},vm.checkAll=function(column){if(null!=vm.treeGrid){var cellIndex=findObjectIndex(vm.treeGrid.columns,column,null),checkValueToSet=column.selected;if(null!=cellIndex&&vm.treeGrid.rows){for(var i=0;i<vm.treeGrid.rows.length;i++)vm.treeGrid.rows[i].cells[cellIndex].selected=checkValueToSet,pubsub.publish("treeGrid.onCheckBoxChanged"+vm.treeGridGuid,{vm:vm,row:vm.treeGrid.rows[i]}),function toggleChildren(row,cellIndex){if(null!=row.children)for(var i=0;i<row.children.length;i++)row.children[i].cells[cellIndex].selected=checkValueToSet,pubsub.publish("treeGrid.onCheckBoxChanged"+vm.treeGridGuid,{vm:vm,row:row.children[i]}),toggleChildren(row.children[i],cellIndex)}(vm.treeGrid.rows[i],cellIndex);onTreeGridChanged()}}},vm.isCheckBoxColumnByCell=function(columnIndex){var showSelector=vm.selectionBoxesDisplay&&vm.getUserDataValue(vm.treeGrid.columns[columnIndex].userData,"showSelector");return showSelector||!1},vm.isCheckBoxColumn=function(column){var userDataMap,columnName,returnValue=!1;return!column.userData||"CheckBoxColumn"==(userDataMap=JSON.parse(column.userData)).columnType&&((columnName=userDataMap.columnName)&&vm.selectionColumnParams&&vm.selectionColumnParams[columnName]&&(column.label=vm.selectionColumnParams[columnName].label),returnValue=!0),!0===returnValue},vm.alert_ra={isRendered:!1,callbacks:{confirm:null,cancel:null},label:{},resetLabels:function(){var labels={},labels=null!=vm.alertLabels?{heading:vm.alertLabels.heading,message:vm.alertLabels.message,cancel:vm.alertLabels.cancel,confirm:vm.alertLabels.confirm}:{heading:"Default Heading RA",message:"Default Message RA",cancel:"Default Cancel Label RA",confirm:"Default Confirm Label RA"};vm.alert_ra._setModalLabels(vm.alert_ra.label,labels)},_setModalLabels:function(obj,labels){var keys=Object.keys(labels);for(var i in keys){var key=keys[i];obj[key]=labels[key]}},confirm:function(){vm.alert_ra.isRendered=!1,"function"==typeof vm.alert_ra.callbacks.confirm&&vm.alert_ra.callbacks.confirm()},cancel:function(){vm.alert_ra.isRendered=!1,"function"==typeof vm.alert_ra.callbacks.cancel&&vm.alert_ra.callbacks.cancel(),vm.treeGrid.globalOptions.value=vm.treeGrid.globalOptions.options[0]}},$scope.alert={isRendered:!1,theme:"warning",label:{heading:"Default Heading",message:"Default Message",cancel:"Default Cancel Label",confirm:"Default Confirm Label",save:"Default Save Label"},confirm:function(selection,row,cell,option){$scope.alert.isRendered=!1,selection&&vm.performAlertConfirmAction($scope.selectRow,$scope.selectCell,$scope.selectOption)},save:function(selection,object){$scope.alert.isRendered=!1,vm.performAlertSaveAction(vm.modalObject)}},$scope.confirmAlertFunction=function(row,cell,option){$scope.selectRow=row,$scope.selectCell=cell,$scope.selectOption=option,$scope.alert.isRendered=!0},$scope.confirmSaveFunction=function(object){$scope.object=object,$scope.alert.isRendered=!0}},controllerAs:"vm",bindToController:!0,scope:{guid:"@",templateUrl:"@",performActionsButtonLabel:"@",isPerformActionsBtnEnabled:"<?",noRecordsFoundLabel:"@",getTreeDataRa:"@",performTreeActionRa:"@",contextId:"@",maxDepth:"@",propagateDropDownChange:"@",hideCollapseExpandIcon:"@",contextParams:"@",performTreeActionRaContext:"@",getTreeDataRaContext:"@",alertConfirmRa:"@",alertSaveRa:"@",alertLabels:"=",performActionsButtonHasAlert:"=",showActionButtons:"<?",filters:"@?",globalActions:"@",parentController:"=?",selectionBoxesDisplay:"=?",selectionColumnParams:"=?",actionButtonClass:"=?",secondaryButton:"=?",globalActionLabels:"=?",remotingService:"@?",splitParameterOption:"<?",treeData:"@?"}}}angular.module("ncTreeGrid",["ncUI","ncDataProviders","ncPubsub","ncFilters","ncFormElements"]).directive("treeGrid",TreeGridDirective),TreeGridDirective.$inject=["messageService","modalDialogService","remotingManager","pubsub","ui","config"]}(window.angular)},129:function(module,exports){module.exports='<div class=ncTreeGridContainer> <div ng-if=!vm.templateUrl> <message></message> <modaldialog ng-if=vm.isModalVisible></modaldialog> <div ng-if="(vm.secondaryButton.show || vm.hasDropDownActionsButton) && vm.showActionButtons !== false" class=performActions> <button ng-if=vm.secondaryButton.show ng-class="vm.secondaryButton.class === \'\' ? \'slds-button slds-button--neutral\' : vm.secondaryButton.class" ng-disabled=!vm.secondaryButton.enabled ng-click=vm.secondaryButton.action()>{{vm.secondaryButton.label}}</button> <button ng-if=vm.hasDropDownActionsButton ng-class="vm.actionButtonClass === \'\' ? \'slds-button slds-button--brand\' : vm.actionButtonClass" ng-disabled=!vm.isDropDownActionsButtonEnabled ng-click=vm.performDropDownActions()>{{vm.performActionsButtonLabel}}</button> </div> <div ng-if=vm.hasGlobalActionDropdown class="dropdown slds-float--left"> <select ng-model=vm.treeGrid.globalOptions.value ng-options="option.label for option in vm.treeGrid.globalOptions.options track by option.label" ng-disabled=!vm.isGlobalActionDropdownEnabled ng-change=vm.performGlobalDropDownActions(vm.treeGrid.globalOptions.value) class=slds-select></select> </div> <nc-modal show=vm.alert_ra.isRendered header={{vm.alert_ra.label.heading}} primary-action=vm.alert_ra.confirm() primary-label={{vm.alert_ra.label.confirm}} cancel-action=vm.alert_ra.cancel() cancel-label={{vm.alert_ra.label.cancel}}>{{vm.alert_ra.label.message}}</nc-modal> <table class="slds-table slds-table--bordered slds-no-row-hover treeGrid"> <thead> <tr> <th ng-repeat="column in vm.treeGrid.columns track by $index" class=slds-text-heading--label> <span ng-if=vm.isCheckBoxColumnByCell($index)> <input ng-class=slds-checkbox type=checkbox ng-model=column.selected ng-change=vm.checkAll(column) /> </span> <span> {{column.label}} </span> </th> </tr> </thead> <tbody> <tr ng-if="vm.hasTreeLoaded && vm.flattenedTreeGrid.length < 1"> <td class=noRecords colspan={{vm.treeGrid.columns.length}}> {{vm.noRecordsFoundLabel}} </td> </tr> <tr ng-repeat="row in vm.flattenedTreeGrid" ng-class="(vm.isExpandable(row) && row.expanded) ? \'slds-is-selected\' : \'\'"> <td class=slds-cell-wrap ng-repeat="cell in row.cells track by $index" ng-style=" $first && {\'padding-left\':((row.depth+1)*24)+\'px\'} || {\'padding-left\':\'8px\'}"> <img class=cursor-pointer ng-if="$first && vm.hideCollapseExpandIcon!=\'true\'" ng-click=vm.toggleExpand(row) ng-style=" vm.isExpandable(row) && {\'visibility\':\'visible\'} || {\'visibility\':\'hidden\'}" width=15 height=15 ng-src="{{ row.expanded ?\n\t\t\t\t\t\t\t\tvm.config.chevronDownUrl :\n\t\t\t\t\t\t\t\tvm.config.chevronRightUrl }}"/> <span class="ng-scope checkbox-margin" ng-if=vm.isStandardCheckBoxCell(cell)> <input type=checkbox ng-disabled=!cell.value.enabled ng-model=cell.selected> </span> <span class="ng-scope checkbox-margin" ng-if=vm.isCheckBoxCell(cell)> <input type=checkbox ng-model=cell.selected ng-change=vm.onCheckBoxChanged(row,cell)> </span> <span class=ng-scope ng-if="vm.isCheckBoxColumnByCell($index) == \'true\'"> <input type=checkbox ng-model=cell.selected ng-change=vm.onCheckBoxChanged(row,cell)> </span> <span ng-class="{\'disabled-row\': (vm.isRowDisabled(row) && !vm.excludeCellFromDisabledStyle(cell))}"> {{vm.getCellLabel(cell)}} </span> <a href=/{{vm.getRecordIdFromUserData(cell.userData)}} ng-if=vm.isNameField(cell) target=_blank>{{cell.value.label}}</a> <a href="" ng-if=vm.isCellButton(cell) ng-repeat="option in cell.options" ng-click="vm.performAction(row,cell, option)" ng-class="(option.enabled) ? \'\' : \'disabled\'">{{option.label}}</a> <ul ng-if=vm.isCellList(cell)> <li ng-repeat="option in cell.options">{{option.label}}</li> </ul> <span ng-if=vm.isCellBadge(cell) ng-repeat="option in cell.options" class="slds-badge {{option.style}}">{{option.label}}</span> <span ng-if=vm.isCellTooltip(cell) ng-show=cell.value.label popover=popover class=popover-icon-warning data-content={{cell.value.label}}> <img ng-src="{{ vm.config.warningIconUrl }}" style=min-width:20px> </span> <span ng-if=vm.isCurrencyField(cell) ng-bind="cell.value.decimalValue | intl:cell.value.formatCode:false:cell.value.isocode"> </span> <select ng-if=vm.isCellDropDown(cell) ng-model=cell.value ng-options="option.label for option in cell.options track by option.label" ng-change="vm.onDropdownChanged(row, cell)" ng-disabled=!cell.value.enabled class=slds-select></select> <select ng-if=vm.isCellDropDownGroup(cell) ng-model=cell.value ng-options="option.label group by option.groupBy for option in cell.options track by option.label" ng-change="vm.onDropdownChanged(row, cell)" ng-disabled=!cell.value.enabled class=slds-select></select> <div class=force ng-if=vm.isCellListAction(cell) aria-expanded=true> <div class="item btn-group tools-actions"> <div class=dropdown> <button data-toggle=dropdown class="slds-button slds-button--icon-border-filled slds-button--icon-x-small"> <img class="slds-button__icon slds-button__icon--hint slds-button__icon--small" ng-src="{{ vm.config.downIconUrl }}"> </button> <ul aria-labelledby=tools-actions class="dropdown-menu pull-right"> <li ng-repeat="option in cell.options"> <a href="" ng-click="vm.performAction(row, cell, option)" ng-class="(option.enabled) ? \'\' : \'disabled\'">{{option.label}}</a> </li> </ul> </div> </div> </div> </td> </tr> </tbody> </table> </div> <div ng-if=vm.templateUrl> <div ng-include=vm.templateUrl></div> </div> </div>'}});